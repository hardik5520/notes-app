{"version":3,"sources":["Auth.js","Nav.js","Updatenote.js","ViewNotes.js","Create.js","Logout.js","Home.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Auth","viewallusers","axios","get","then","response","setState","Users","data","users","console","log","state","catch","err","signupdisplay","logindisplay","email","password","name","check","exist","proceed","handleChange","bind","handleSubmit","event","target","value","this","procee","post","message","alert","setsignupdisplay","Fragment","onClick","id","className","type","onChange","color","Component","nav","to","Update","componentDidMount","props","creator","title","descreption","updatedisplay","olddesc","oldtitle","patch","res","status","window","location","href","ViewNotes","login","viewnotesbyid","flag","Notes","note","handleDelete","_id","delete","viewdisplay","map","obj","idx","key","Create","creatorname","displaycreate","required","Logout","exact","path","stat","handleerror","setlogindisplay","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e4d03811.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n// import create from  \"./Create\";\r\n// import viewnotes from \"./ViewNotes\";\r\n\r\n\r\nexport default class Auth extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          signupdisplay:false,\r\n          logindisplay:false,\r\n          email:\"\",\r\n          password:\"\",\r\n          name:\"\",\r\n          Users:[],\r\n          check:false,\r\n          exist:false,\r\n          proceed:false\r\n      };\r\n      \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    viewallusers = () => {\r\n        axios\r\n          .get(\"/api/user\")\r\n          .then((response) => {\r\n            this.setState({ Users: response.data.users});\r\n            console.log(\"hello\",this.state.Users);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n      \r\n    handleChange(event) {\r\n        const target=event.target;\r\n        const name=target.name;\r\n        const value=target.value;\r\n\r\n        this.setState({\r\n            [name]:value,\r\n      })};\r\n\r\n      async handleSubmit ()  {\r\n        this.setState({check:false, exist:false, procee:false});\r\n        //console.log(this.state);\r\n        let res=await axios.post('/api/user/signup',this.state);\r\n        //console.log(\"res=\",res.data.message);\r\n        if(res.data.message!==\"error\")\r\n        {\r\n          this.setState({check:true, proceed:true})\r\n        }\r\n        else{\r\n          this.setState({exist:true, proceed:false, check:true});\r\n        }\r\n        //console.log(\"check\",this.state);    \r\n    }\r\n    proceed(){\r\n      alert('SIGN UP SUCCESSFUL')\r\n    }\r\n\r\n    render(){\r\n        const setsignupdisplay =() => {\r\n            this.setState({signupdisplay:!this.state.signupdisplay});\r\n        }\r\n        if(this.state.check===false)\r\n        {\r\n          return(\r\n            <React.Fragment>\r\n                <div>\r\n                {/* signuppart */}\r\n              <button onClick={setsignupdisplay} id=\"ip2\">SIGNUP</button>\r\n              {this.state.signupdisplay?\r\n              <>\r\n              <div className=\"card3\">\r\n              <form name=\"signingup\">\r\n                Name:<input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}  id=\"ip1\"/><hr/>\r\n                Email:<input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} id=\"ip1\" /><hr/>\r\n                Password:<input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} id=\"ip1\" /><hr/>\r\n                </form>\r\n            <button color=\"danger\" onClick={this.handleSubmit} id=\"ip3\">SIGNUP</button>\r\n              </div>\r\n              </>:<></>\r\n        }\r\n        </div>\r\n              </React.Fragment>)\r\n        }\r\n        if(this.state.exist===true)\r\n        {\r\n          return(\r\n            <React.Fragment>\r\n                <div>\r\n                {/* signuppart */}\r\n              <button onClick={setsignupdisplay} id=\"ip2\">SIGNUP</button>\r\n              {this.state.signupdisplay?\r\n              <>\r\n              <div className=\"card3\">\r\n              <form name=\"signingup\">\r\n                Name:<input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}  id=\"ip1\"/><hr/>\r\n                Email:<input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} id=\"ip1\" /><hr/>\r\n                Password:<input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} id=\"ip1\" /><hr/>\r\n                </form>\r\n                <div className=\"error\">USER ALREADY EXISTS!</div>\r\n            <button color=\"danger\" onClick={this.handleSubmit} id=\"ip3\">SIGNUP</button>\r\n              </div>\r\n              </>:<></>\r\n        }\r\n        </div>\r\n              </React.Fragment>)\r\n        }\r\n        if(this.state.proceed === true)\r\n        {\r\n            return(\r\n              <div>successfully registered, now Login!</div>\r\n            );\r\n        }\r\n        }\r\n}\r\n          \r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nexport default class nav extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Link to='/create'>Create</Link><br/><hr/>\r\n                <Link to='/view'>View</Link><hr/>\r\n                <Link to='/logout'>Logout</Link><hr/><br/><br/>\r\n            </div>\r\n            );\r\n    }\r\n\r\n\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport default class Update extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          title:\"\",\r\n          descreption:\"\",\r\n          creator:\"\",\r\n          updatedisplay:false,\r\n          olddesc:\"\",\r\n          oldtitle:\"\"\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n   componentDidMount=(props)=>{\r\n        //console.log(\"received title=\",this.props.title);\r\n        //console.log(\"received desc=\",this.props.descreption);\r\n        this.setState({creator:this.props.id, title:this.props.title, descreption:this.props.descreption}, ()=>{\r\n            //console.log(\"working\");\r\n        });\r\n        //console.log(\"DIDmount\",this.state);\r\n    }\r\n    async handleChange(event) {\r\n        const target=event.target;\r\n        const name=target.name;\r\n        const value=target.value;\r\n        this.setState({\r\n            [name]:value,\r\n      })\r\n    };\r\n\r\n      async handleSubmit ()  {\r\n          //console.log(\"submit check=\",this.state);\r\n        let res=await axios.patch(`/api/note/${this.props.id}`,this.state);\r\n        console.log(res.status); \r\n        //window.location.reload();   \r\n        window.location.href=\"/view\";\r\n    }\r\n\r\n    render(){\r\n        const setupdatedisplay =() => {\r\n            this.setState({updatedisplay:!this.state.updatedisplay});\r\n        }\r\n        \r\n        return(\r\n        <React.Fragment>\r\n            <div>\r\n            <button onClick={setupdatedisplay} id=\"ip3\">UPDATE</button>\r\n                {\r\n                    this.state.updatedisplay?\r\n                    <>          \r\n                      <div className=\"card4\">\r\n                      <form name=\"update\">\r\n                        Title:<br/>\r\n                        <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} id=\"ip1\"/><br/>\r\n                        Descreption:<br/>\r\n                        <input type=\"text\" name=\"descreption\" value={this.state.descreption} onChange={this.handleChange} id=\"ip1\" /><br/>\r\n                        </form>\r\n                    <button color=\"danger\" onClick={this.handleSubmit} id=\"ip3\">COMMIT CHANGES</button>\r\n                      </div>\r\n                      </>:<></>\r\n                }\r\n            </div>\r\n          </React.Fragment>)\r\n        }\r\n}\r\n          \r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport \"./Auth\";\r\nimport Update from './Updatenote';\r\n\r\nclass ViewNotes extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      flag:false,\r\n      id:\"\",\r\n      Notes: [],\r\n      login:false,\r\n      viewdisplay:false\r\n    };\r\n  }\r\n  componentDidMount=(props)=>{\r\n    this.setState({id:this.props.id, login:this.props.login});\r\n  }\r\n\r\n  viewnotesbyid = (props) => {\r\n    //console.log(this.props.id);\r\n    this.setState({id:this.props.id, login:this.props.login,flag:this.props.flag});\r\n    //console.log(\"stateis==\",this.props.flag);\r\n    //console.log(`./api/note/${this.state.id}`);\r\n    axios\r\n  .get(`/api/note/${this.state.id}`)\r\n  .then((response) => {\r\n    const Notes=response.data.note;\r\n    this.setState({ Notes});\r\n    //console.log(this.state.Notes);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\nhandleDelete = (_id) => {\r\n    axios.delete(`/api/note/${_id} `);\r\n    //console.log(\"Note Deleted \", { _id });\r\n    window.location.href=\"/view\";\r\n  };\r\n\r\n\r\n  render() {\r\n    const setviewdisplay =() => {\r\n      this.setState({viewdisplay:!this.state.viewdisplay});\r\n  }\r\n    return (\r\n\r\n      <React.Fragment>\r\n        \r\n        <button onClick={() => {this.viewnotesbyid(); setviewdisplay();}} id=\"ip3\">VIEW</button>\r\n        {this.state.viewdisplay?\r\n        <>\r\n        {this.state.Notes.map((obj, idx) => (\r\n          <div key={idx} className=\"cardwrapper\">\r\n            <div  className=\"card2\">\r\n            <h4>{`${obj.title}`}</h4><br/>\r\n            <h5>{`${obj.descreption}`}</h5>\r\n            <div>\r\n             <button onClick={() => {\r\n                 this.handleDelete(obj._id);\r\n                   }} id=\"ip4\">DELETE</button>\r\n           </div>\r\n           \r\n           <div><Update id={obj._id} title={obj.title} descreption={obj.descreption} /></div>\r\n         </div>\r\n         </div>\r\n       ))}\r\n       </>:<></>\r\n  }\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n  export default ViewNotes;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n//import {FaSpinner} from 'react-icons/fa';\r\nexport default class Create extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displaycreate:'',\r\n            title:'',\r\n            descreption:'',\r\n            creator:\"\",\r\n            creatorname:\"\"\r\n          };\r\n          this.handleChange=this.handleChange.bind(this);\r\n          this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n  handleChange = (event,props) => {\r\n    const creator=this.props.id;\r\n    this.setState({creator:creator});\r\n    const creatorname=this.props.creatorname;\r\n    this.setState({creatorname:creatorname});\r\n\r\n    const target=event.target;\r\n    const name=target.name;\r\n    const value=target.value;\r\n\r\n    this.setState({\r\n        [name]:value,\r\n    });\r\n    this.setState({creator:this.props.id, creatorname:this.props.creatorname});\r\n  }\r\n  \r\n async handleSubmit ()  {\r\n     //console.log(\"final state here=\",this.state);\r\n      await axios.post('/api/note',this.state).then().catch((err) => {console.log(\"ERROR=\",err)});\r\n      //console.log(\"create state--\",this.state);\r\n  };\r\n  \r\n  render() {\r\n    const setdisplaycreate=()=> {\r\n        this.setState({displaycreate:!this.state.displaycreate})\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <button className=\"button-use\" onClick={setdisplaycreate} id=\"ip3\">Create</button>\r\n          {this.state.displaycreate?            \r\n           <>\r\n              <div className=\"card\">\r\n                  <form name=\"newNote\">\r\n                      title:\r\n                      <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} id=\"ip1\" required /><br/>\r\n                      descreption:\r\n                      <input type=\"text\" name=\"descreption\" value={this.state.descreption} id=\"ip1\" onChange={this.handleChange} required />\r\n                      <br/>                   \r\n                  </form>\r\n                  <button color=\"danger\" onClick={this.handleSubmit} id=\"ip3\">add</button>                  \r\n              </div>\r\n          </>:<></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nexport default class Logout extends Component {\r\n    \r\n  \r\n async handleSubmit ()  {\r\n     window.location.href=\"/\";\r\n  };\r\n  \r\n  render() { \r\n    return (\r\n      <button onClick={this.handleSubmit} id=\"ip4\">Logout</button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport ViewNotes from './ViewNotes';\r\nimport Create from './Create';\r\nimport Logout from './Logout';\r\nexport default class nav extends Component{\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                <Nav />\r\n                <Switch>\r\n                    {/* <Route exact path='/' component={Login} /> */}\r\n                    <Route exact path='/view'><ViewNotes id={this.props.id} login={this.props.login} /></ Route>\r\n                    <Route exact path='/create'><Create  id={this.props.id} creatorname={this.props.creatorname}/></Route>\r\n                    <Route exact path='/logout'><Logout /></Route>\r\n                </Switch>\r\n                </BrowserRouter>\r\n\r\n            </div>\r\n            );\r\n    }\r\n\r\n\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n// import Create from  \"./Create\";\r\n// import View from \"./ViewNotes\";\r\nimport Signup from \"./Auth\";\r\nimport Home from './Home';\r\n\r\nexport default class Auth extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n          id:\"\",\r\n          name:\"\",\r\n          login:false,\r\n          stat:false,\r\n          signupdisplay:false,\r\n          logindisplay:false,\r\n          email:\"\",\r\n          password:\"\",\r\n          //name:\"\",\r\n          Users:[],\r\n          Notes:[],\r\n          viewdisplay:false,\r\n          proceed:false,\r\n          handleerror:false\r\n      };\r\n      \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target=event.target;\r\n        const name=target.name;\r\n        const value=target.value;\r\n\r\n        this.setState({\r\n            [name]:value,\r\n      })};\r\n\r\n    async handleSubmit () {\r\n        this.setState({login:false, handleerror:false, proceed:false})\r\n        // console.log(\"status\",this.state);\r\n        let res=await axios.post(\"./api/user/login\",this.state);\r\n        if(res.data.message !== \"error\")\r\n        {\r\n            this.setState({login:true, proceed:true});     \r\n            this.setState({id:res.data.message, name:res.data.name});\r\n            //console.log(res.data.name);\r\n            this.setState({stat:res.status});       \r\n        }\r\n        else{\r\n            this.setState({proceed:false, handleerror:true, login:true})\r\n        }\r\n        //console.log(\"login is--\",this.state.login);\r\n        //console.log(\"final state-\",this.state);\r\n    }\r\n\r\n\r\n    render(){\r\n        const setlogindisplay =() => {\r\n            this.setState({logindisplay:!this.state.logindisplay});\r\n        }\r\n        \r\n        if(this.state.login===false)\r\n        {\r\n            return(\r\n            <React.Fragment>       \r\n            <h6>Click here to Login!</h6>\r\n            <button onClick={setlogindisplay} id=\"ip2\">LOGIN</button>\r\n            {this.state.logindisplay?\r\n            <>\r\n            <div className=\"card3\">\r\n            <form name=\"loggingin\">\r\n                Email:\r\n              <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} id=\"ip1\" /><br/><hr/>\r\n              Password:\r\n              <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} id=\"ip1\" /><br/><hr/>\r\n              </form>\r\n          <button color=\"danger\" id=\"ip3\" onClick={this.handleSubmit}>LOGIN</button>\r\n            </div>\r\n            </>:<></>\r\n            }\r\n        {\r\n            <>\r\n            <h6>New User?Click here to Signup!</h6><Signup />\r\n            </>\r\n        }\r\n            </React.Fragment>\r\n            )\r\n        }\r\n        if(this.state.handleerror === true){\r\n            return(\r\n                \r\n                        <React.Fragment>\r\n                        <h6>Click here to Login!</h6>\r\n                        <button onClick={setlogindisplay} id=\"ip2\">LOGIN</button>\r\n                        {this.state.logindisplay?\r\n                        <>\r\n                        <div className=\"card3\">\r\n                        <form name=\"loggingin\">\r\n                            Email:\r\n                          <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} id=\"ip1\" /><br/><hr/>\r\n                          Password:\r\n                          <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} id=\"ip1\" /><br/><hr/>\r\n                          </form>\r\n                          <div className=\"error\">WRONG CREDENTIALS PASSED!</div>\r\n                      <button color=\"danger\" id=\"ip3\" onClick={this.handleSubmit}>LOGIN</button>\r\n                        </div>\r\n                        </>:<></>\r\n                        }\r\n                    {\r\n                        <>\r\n                        {/* // signuppart */}\r\n                        <h6>New User?Click here to Signup!</h6><Signup />\r\n                        </>\r\n                    }\r\n                        </React.Fragment>\r\n                        )\r\n        }\r\n        if(this.state.proceed === true)\r\n        {\r\n            return(\r\n                <Home id={this.state.id} login={this.state.login} creatorname={this.state.name} />\r\n            );\r\n        }\r\n  }\r\n    } ","import React from \"react\";\n//import Home from './Home';\nimport Login from './Login';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Login />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}